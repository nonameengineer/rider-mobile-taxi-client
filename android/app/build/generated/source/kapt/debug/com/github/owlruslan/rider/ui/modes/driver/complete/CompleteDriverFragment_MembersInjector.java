// Generated by Dagger (https://dagger.dev).
package com.github.owlruslan.rider.ui.modes.driver.complete;

import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CompleteDriverFragment_MembersInjector implements MembersInjector<CompleteDriverFragment> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<CompleteDriverContract.Presenter> presenterProvider;

  public CompleteDriverFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<CompleteDriverContract.Presenter> presenterProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.presenterProvider = presenterProvider;
  }

  public static MembersInjector<CompleteDriverFragment> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<CompleteDriverContract.Presenter> presenterProvider) {
    return new CompleteDriverFragment_MembersInjector(androidInjectorProvider, presenterProvider);
  }

  @Override
  public void injectMembers(CompleteDriverFragment instance) {
    DaggerFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectPresenter(instance, presenterProvider.get());
  }

  @InjectedFieldSignature("com.github.owlruslan.rider.ui.modes.driver.complete.CompleteDriverFragment.presenter")
  public static void injectPresenter(CompleteDriverFragment instance,
      CompleteDriverContract.Presenter presenter) {
    instance.presenter = presenter;
  }
}
