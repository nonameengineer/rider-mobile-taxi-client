// Generated by Dagger (https://dagger.dev).
package com.github.owlruslan.rider.services.map;

import android.app.Activity;
import android.content.Context;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MapService_Factory implements Factory<MapService> {
  private final Provider<Activity> activityProvider;

  private final Provider<Context> contextProvider;

  public MapService_Factory(Provider<Activity> activityProvider,
      Provider<Context> contextProvider) {
    this.activityProvider = activityProvider;
    this.contextProvider = contextProvider;
  }

  @Override
  public MapService get() {
    MapService instance = newInstance();
    MapService_MembersInjector.injectActivity(instance, activityProvider.get());
    MapService_MembersInjector.injectContext(instance, contextProvider.get());
    return instance;
  }

  public static MapService_Factory create(Provider<Activity> activityProvider,
      Provider<Context> contextProvider) {
    return new MapService_Factory(activityProvider, contextProvider);
  }

  public static MapService newInstance() {
    return new MapService();
  }
}
