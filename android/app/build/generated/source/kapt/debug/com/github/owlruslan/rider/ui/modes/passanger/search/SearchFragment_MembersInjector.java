// Generated by Dagger (https://dagger.dev).
package com.github.owlruslan.rider.ui.modes.passanger.search;

import com.github.owlruslan.rider.services.places.PlacesService;
import com.github.owlruslan.rider.ui.modes.passanger.ride.RideFragment;
import dagger.Lazy;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import dagger.internal.DoubleCheck;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SearchFragment_MembersInjector implements MembersInjector<SearchFragment> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<SearchContract.Presenter> presenterProvider;

  private final Provider<PlacesService> placesServiceProvider;

  private final Provider<RideFragment> p0Provider;

  public SearchFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<SearchContract.Presenter> presenterProvider,
      Provider<PlacesService> placesServiceProvider, Provider<RideFragment> p0Provider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.presenterProvider = presenterProvider;
    this.placesServiceProvider = placesServiceProvider;
    this.p0Provider = p0Provider;
  }

  public static MembersInjector<SearchFragment> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<SearchContract.Presenter> presenterProvider,
      Provider<PlacesService> placesServiceProvider, Provider<RideFragment> p0Provider) {
    return new SearchFragment_MembersInjector(androidInjectorProvider, presenterProvider, placesServiceProvider, p0Provider);
  }

  @Override
  public void injectMembers(SearchFragment instance) {
    DaggerFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectPresenter(instance, presenterProvider.get());
    injectPlacesService(instance, placesServiceProvider.get());
    injectSetRideFragmentProvider(instance, DoubleCheck.lazy(p0Provider));
  }

  @InjectedFieldSignature("com.github.owlruslan.rider.ui.modes.passanger.search.SearchFragment.presenter")
  public static void injectPresenter(SearchFragment instance, SearchContract.Presenter presenter) {
    instance.presenter = presenter;
  }

  @InjectedFieldSignature("com.github.owlruslan.rider.ui.modes.passanger.search.SearchFragment.placesService")
  public static void injectPlacesService(SearchFragment instance, PlacesService placesService) {
    instance.placesService = placesService;
  }

  public static void injectSetRideFragmentProvider(SearchFragment instance, Lazy<RideFragment> p0) {
    instance.setRideFragmentProvider(p0);
  }
}
