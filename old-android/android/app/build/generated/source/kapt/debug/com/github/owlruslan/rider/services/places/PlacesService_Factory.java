// Generated by Dagger (https://dagger.dev).
package com.github.owlruslan.rider.services.places;

import android.content.Context;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PlacesService_Factory implements Factory<PlacesService> {
  private final Provider<Context> contextProvider;

  public PlacesService_Factory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public PlacesService get() {
    PlacesService instance = newInstance();
    PlacesService_MembersInjector.injectContext(instance, contextProvider.get());
    return instance;
  }

  public static PlacesService_Factory create(Provider<Context> contextProvider) {
    return new PlacesService_Factory(contextProvider);
  }

  public static PlacesService newInstance() {
    return new PlacesService();
  }
}
