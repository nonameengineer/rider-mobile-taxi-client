// Generated by Dagger (https://dagger.dev).
package com.github.owlruslan.rider.ui.modes.driver.search;

import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SearchDriverFragment_MembersInjector implements MembersInjector<SearchDriverFragment> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<SearchDriverContract.Presenter> presenterProvider;

  public SearchDriverFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<SearchDriverContract.Presenter> presenterProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.presenterProvider = presenterProvider;
  }

  public static MembersInjector<SearchDriverFragment> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<SearchDriverContract.Presenter> presenterProvider) {
    return new SearchDriverFragment_MembersInjector(androidInjectorProvider, presenterProvider);
  }

  @Override
  public void injectMembers(SearchDriverFragment instance) {
    DaggerFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectPresenter(instance, presenterProvider.get());
  }

  @InjectedFieldSignature("com.github.owlruslan.rider.ui.modes.driver.search.SearchDriverFragment.presenter")
  public static void injectPresenter(SearchDriverFragment instance,
      SearchDriverContract.Presenter presenter) {
    instance.presenter = presenter;
  }
}
